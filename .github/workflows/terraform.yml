name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

jobs:
  terraform:
    name: "Terraform"
    runs-on: "self-hosted"
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: true
      
      - name: Checkout
        uses: actions/checkout@v2
      
      #- name: Prepare Credentials
      #  id: creds
      #  run: |
      #       echo "${{ secrets.TF_SA_KEY }}" | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}

      - name: Terraform Init
        id: init
        run: terraform init #-backend-config=backend-envs/tbgdev.tfvars
        env:
          GOOGLE_CREDENTIALS: "${{ secrets.GOOGLE_CREDENTIALS }}"
      #- name: Terraform Format
      #  id: fmt
      #  run: terraform fmt -check
      - name: Terraform Plan
        id: plan
        #if: github.event_name == 'pull_request'
        run: terraform plan #-var-file=envs/tbgdev.tfvars -no-color
        continue-on-error: true
        env:
          GOOGLE_CREDENTIALS: "${{ secrets.GOOGLE_CREDENTIALS }}"
          GITHUB_PAT: "${{ secrets.USER_PAT }}"

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve #-var-file=envs/tbgdev.tfvars
        env:
          GOOGLE_CREDENTIALS: "${{ secrets.GOOGLE_CREDENTIALS }}"
          GITHUB_PAT: "${{ secrets.USER_PAT }}"
